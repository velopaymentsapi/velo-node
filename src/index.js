/**
 * Velo Payments APIs
 * ## Terms and Definitions  Throughout this document and the Velo platform the following terms are used:  * **Payor.** An entity (typically a corporation) which wishes to pay funds to one or more payees via a payout. * **Payee.** The recipient of funds paid out by a payor. * **Payment.** A single transfer of funds from a payor to a payee. * **Payout.** A batch of Payments, typically used by a payor to logically group payments (e.g. by business day). Technically there need be no relationship between the payments in a payout - a single payout can contain payments to multiple payees and/or multiple payments to a single payee. * **Sandbox.** An integration environment provided by Velo Payments which offers a similar API experience to the production environment, but all funding and payment events are simulated, along with many other services such as OFAC sanctions list checking.  ## Overview  The Velo Payments API allows a payor to perform a number of operations. The following is a list of the main capabilities in a natural order of execution:  * Authenticate with the Velo platform * Maintain a collection of payees * Query the payor’s current balance of funds within the platform and perform additional funding * Issue payments to payees * Query the platform for a history of those payments  This document describes the main concepts and APIs required to get up and running with the Velo Payments platform. It is not an exhaustive API reference. For that, please see the separate Velo Payments API Reference.  ## API Considerations  The Velo Payments API is REST based and uses the JSON format for requests and responses.  Most calls are secured using OAuth 2 security and require a valid authentication access token for successful operation. See the Authentication section for details.  Where a dynamic value is required in the examples below, the {token} format is used, suggesting that the caller needs to supply the appropriate value of the token in question (without including the { or } characters).  Where curl examples are given, the –d @filename.json approach is used, indicating that the request body should be placed into a file named filename.json in the current directory. Each of the curl examples in this document should be considered a single line on the command-line, regardless of how they appear in print.  ## Authenticating with the Velo Platform  Once Velo backoffice staff have added your organization as a payor within the Velo platform sandbox, they will create you a payor Id, an API key and an API secret and share these with you in a secure manner.  You will need to use these values to authenticate with the Velo platform in order to gain access to the APIs. The steps to take are explained in the following:  create a string comprising the API key (e.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8) and API secret (e.g. c396b26b-137a-44fd-87f5-34631f8fd529) with a colon between them. E.g. 44a9537d-d55d-4b47-8082-14061c2bcdd8:c396b26b-137a-44fd-87f5-34631f8fd529  base64 encode this string. E.g.: NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==  create an HTTP **Authorization** header with the value set to e.g. Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==  perform the Velo authentication REST call using the HTTP header created above e.g. via curl:  ```   curl -X POST \\   -H \"Content-Type: application/json\" \\   -H \"Authorization: Basic NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ==\" \\   'https://api.sandbox.velopayments.com/v1/authenticate?grant_type=client_credentials' ```  If successful, this call will result in a **200** HTTP status code and a response body such as:  ```   {     \"access_token\":\"19f6bafd-93fd-4747-b229-00507bbc991f\",     \"token_type\":\"bearer\",     \"expires_in\":1799,     \"scope\":\"...\"   } ``` ## API access following authentication Following successful authentication, the value of the access_token field in the response (indicated in green above) should then be presented with all subsequent API calls to allow the Velo platform to validate that the caller is authenticated.  This is achieved by setting the HTTP Authorization header with the value set to e.g. Bearer 19f6bafd-93fd-4747-b229-00507bbc991f such as the curl example below:  ```   -H \"Authorization: Bearer 19f6bafd-93fd-4747-b229-00507bbc991f \" ```  If you make other Velo API calls which require authorization but the Authorization header is missing or invalid then you will get a **401** HTTP status response. 
 *
 * OpenAPI spec version: 2.10.61
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Challenge from './model/Challenge';
import CreatePayeesCSVRequest from './model/CreatePayeesCSVRequest';
import CreatePayeesCSVResponse from './model/CreatePayeesCSVResponse';
import CreatePayeesRequest from './model/CreatePayeesRequest';
import CreatePayoutRequest from './model/CreatePayoutRequest';
import FailedSubmission from './model/FailedSubmission';
import FundingAudit from './model/FundingAudit';
import FundingEvent from './model/FundingEvent';
import FundingEventType from './model/FundingEventType';
import FundingRequest from './model/FundingRequest';
import FxSummaries from './model/FxSummaries';
import FxSummary from './model/FxSummary';
import GetFundingsResponse from './model/GetFundingsResponse';
import GetPaymentsForPayoutResponse from './model/GetPaymentsForPayoutResponse';
import GetPayoutStatistics from './model/GetPayoutStatistics';
import GetPayoutsResponse from './model/GetPayoutsResponse';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2003 from './model/InlineResponse2003';
import InlineResponse2004 from './model/InlineResponse2004';
import InvitationStatusResponse from './model/InvitationStatusResponse';
import Language from './model/Language';
import ListPaymentsResponse from './model/ListPaymentsResponse';
import ListSourceAccountResponse from './model/ListSourceAccountResponse';
import OnboardedStatus from './model/OnboardedStatus';
import PagedResponse from './model/PagedResponse';
import PagedResponsePage from './model/PagedResponsePage';
import Payee from './model/Payee';
import PayeeInvitationStatus from './model/PayeeInvitationStatus';
import PayeeInviteRequest from './model/PayeeInviteRequest';
import PayeeResponse from './model/PayeeResponse';
import PayeeType from './model/PayeeType';
import PaymentAuditCurrency from './model/PaymentAuditCurrency';
import PaymentChannel from './model/PaymentChannel';
import PaymentChannelCountry from './model/PaymentChannelCountry';
import PaymentChannelRule from './model/PaymentChannelRule';
import PaymentChannelRulesResponse from './model/PaymentChannelRulesResponse';
import PaymentEventResponse from './model/PaymentEventResponse';
import PaymentInstruction from './model/PaymentInstruction';
import PaymentResponse from './model/PaymentResponse';
import PaymentsSummary from './model/PaymentsSummary';
import Payor from './model/Payor';
import PayorBalance from './model/PayorBalance';
import PayorBrandingResponse from './model/PayorBrandingResponse';
import PayorCreateApiKeyRequest from './model/PayorCreateApiKeyRequest';
import PayorCreateApiKeyResponse from './model/PayorCreateApiKeyResponse';
import PayorCreateApplicationRequest from './model/PayorCreateApplicationRequest';
import PayorEmailOptOutRequest from './model/PayorEmailOptOutRequest';
import PayorFundingBankDetailsUpdate from './model/PayorFundingBankDetailsUpdate';
import PayorLogoRequest from './model/PayorLogoRequest';
import PayorRef from './model/PayorRef';
import PayoutStatus from './model/PayoutStatus';
import PayoutSummaryAudit from './model/PayoutSummaryAudit';
import PayoutSummaryResponse from './model/PayoutSummaryResponse';
import QueryBatchResponse from './model/QueryBatchResponse';
import QuoteFxSummary from './model/QuoteFxSummary';
import QuoteResponse from './model/QuoteResponse';
import RejectedPayment from './model/RejectedPayment';
import SourceAccount from './model/SourceAccount';
import SourceAccountResponse from './model/SourceAccountResponse';
import SourceAccountSummary from './model/SourceAccountSummary';
import SupportedCountriesResponse from './model/SupportedCountriesResponse';
import SupportedCountry from './model/SupportedCountry';
import SupportedCurrency from './model/SupportedCurrency';
import SupportedCurrencyResponse from './model/SupportedCurrencyResponse';
import CountriesApi from './api/CountriesApi';
import CurrenciesApi from './api/CurrenciesApi';
import FundingManagerApi from './api/FundingManagerApi';
import PayeeBatchCreationApi from './api/PayeeBatchCreationApi';
import PayeeInvitationApi from './api/PayeeInvitationApi';
import PayeeServiceApi from './api/PayeeServiceApi';
import PayeesApi from './api/PayeesApi';
import PaymentAuditServiceApi from './api/PaymentAuditServiceApi';
import PayorApplicationsApi from './api/PayorApplicationsApi';
import PayorBrandingApi from './api/PayorBrandingApi';
import PayorFundingApi from './api/PayorFundingApi';
import PayorInformationApi from './api/PayorInformationApi';
import PayorServiceApi from './api/PayorServiceApi';
import PayoutHistoryApi from './api/PayoutHistoryApi';
import PayoutServiceApi from './api/PayoutServiceApi';


/**
* _Terms_and_DefinitionsThroughout_this_document_and_the_Velo_platform_the_following_terms_are_used_Payor__An_entity__typically_a_corporation_which_wishes_to_pay_funds_to_one_or_more_payees_via_a_payout__Payee__The_recipient_of_funds_paid_out_by_a_payor__Payment__A_single_transfer_of_funds_from_a_payor_to_a_payee__Payout__A_batch_of_Payments_typically_used_by_a_payor_to_logically_group_payments__e_g__by_business_day__Technically_there_need_be_no_relationship_between_the_payments_in_a_payout___a_single_payout_can_contain_payments_to_multiple_payees_andor_multiple_payments_to_a_single_payee__Sandbox__An_integration_environment_provided_by_Velo_Payments_which_offers_a_similar_API_experience_to_the_production_environment_but_all_funding_and_payment_events_are_simulated_along_with_many_other_services_such_as_OFAC_sanctions_list_checking__OverviewThe_Velo_Payments_API_allows_a_payor_to_perform_a_number_of_operations__The_following_is_a_list_of_the_main_capabilities_in_a_natural_order_of_execution_Authenticate_with_the_Velo_platform_Maintain_a_collection_of_payees_Query_the_payors_current_balance_of_funds_within_the_platform_and_perform_additional_funding_Issue_payments_to_payees_Query_the_platform_for_a_history_of_those_paymentsThis_document_describes_the_main_concepts_and_APIs_required_to_get_up_and_running_with_the_Velo_Payments_platform__It_is_not_an_exhaustive_API_reference__For_that_please_see_the_separate_Velo_Payments_API_Reference__API_ConsiderationsThe_Velo_Payments_API_is_REST_based_and_uses_the_JSON_format_for_requests_and_responses_Most_calls_are_secured_using_OAuth_2_security_and_require_a_valid_authentication_access_token_for_successful_operation__See_the_Authentication_section_for_details_Where_a_dynamic_value_is_required_in_the_examples_below_the_token_format_is_used_suggesting_that_the_caller_needs_to_supply_the_appropriate_value_of_the_token_in_question__without_including_the__or__characters_Where_curl_examples_are_given_the_d_filename_json_approach_is_used_indicating_that_the_request_body_should_be_placed_into_a_file_named_filename_json_in_the_current_directory__Each_of_the_curl_examples_in_this_document_should_be_considered_a_single_line_on_the_command_line_regardless_of_how_they_appear_in_print__Authenticating_with_the_Velo_PlatformOnce_Velo_backoffice_staff_have_added_your_organization_as_a_payor_within_the_Velo_platform_sandbox_they_will_create_you_a_payor_Id_an_API_key_and_an_API_secret_and_share_these_with_you_in_a_secure_manner_You_will_need_to_use_these_values_to_authenticate_with_the_Velo_platform_in_order_to_gain_access_to_the_APIs__The_steps_to_take_are_explained_in_the_followingcreate_a_string_comprising_the_API_key__e_g__44a9537d_d55d_4b47_8082_14061c2bcdd8_and_API_secret__e_g__c396b26b_137a_44fd_87f5_34631f8fd529_with_a_colon_between_them__E_g__44a9537d_d55d_4b47_8082_14061c2bcdd8c396b26b_137a_44fd_87f5_34631f8fd529base64_encode_this_string__E_g__NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQcreate_an_HTTP_Authorization_header_with_the_value_set_to_e_g__Basic_NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQperform_the_Velo_authentication_REST_call_using_the_HTTP_header_created_above_e_g__via_curl__curl__X_POST____H_Content_Type_applicationjson____H_Authorization_Basic_NDRhOTUzN2QtZDU1ZC00YjQ3LTgwODItMTQwNjFjMmJjZGQ4OmMzOTZiMjZiLTEzN2EtNDRmZC04N2Y1LTM0NjMxZjhmZDUyOQ___httpsapi_sandbox_velopayments_comv1authenticategrant_typeclient_credentialsIf_successful_this_call_will_result_in_a_200_HTTP_status_code_and_a_response_body_such_as______access_token19f6bafd_93fd_4747_b229_00507bbc991f____token_typebearer____expires_in1799____scope______API_access_following_authenticationFollowing_successful_authentication_the_value_of_the_access_token_field_in_the_response__indicated_in_green_above_should_then_be_presented_with_all_subsequent_API_calls_to_allow_the_Velo_platform_to_validate_that_the_caller_is_authenticated_This_is_achieved_by_setting_the_HTTP_Authorization_header_with_the_value_set_to_e_g__Bearer_19f6bafd_93fd_4747_b229_00507bbc991f_such_as_the_curl_example_below___H_Authorization_Bearer_19f6bafd_93fd_4747_b229_00507bbc991f_If_you_make_other_Velo_API_calls_which_require_authorization_but_the_Authorization_header_is_missing_or_invalid_then_you_will_get_a_401_HTTP_status_response_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var VeloPaymentsApIs = require('index'); // See note below*.
* var xxxSvc = new VeloPaymentsApIs.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new VeloPaymentsApIs.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new VeloPaymentsApIs.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new VeloPaymentsApIs.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.10.61
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Challenge model constructor.
     * @property {module:model/Challenge}
     */
    Challenge,

    /**
     * The CreatePayeesCSVRequest model constructor.
     * @property {module:model/CreatePayeesCSVRequest}
     */
    CreatePayeesCSVRequest,

    /**
     * The CreatePayeesCSVResponse model constructor.
     * @property {module:model/CreatePayeesCSVResponse}
     */
    CreatePayeesCSVResponse,

    /**
     * The CreatePayeesRequest model constructor.
     * @property {module:model/CreatePayeesRequest}
     */
    CreatePayeesRequest,

    /**
     * The CreatePayoutRequest model constructor.
     * @property {module:model/CreatePayoutRequest}
     */
    CreatePayoutRequest,

    /**
     * The FailedSubmission model constructor.
     * @property {module:model/FailedSubmission}
     */
    FailedSubmission,

    /**
     * The FundingAudit model constructor.
     * @property {module:model/FundingAudit}
     */
    FundingAudit,

    /**
     * The FundingEvent model constructor.
     * @property {module:model/FundingEvent}
     */
    FundingEvent,

    /**
     * The FundingEventType model constructor.
     * @property {module:model/FundingEventType}
     */
    FundingEventType,

    /**
     * The FundingRequest model constructor.
     * @property {module:model/FundingRequest}
     */
    FundingRequest,

    /**
     * The FxSummaries model constructor.
     * @property {module:model/FxSummaries}
     */
    FxSummaries,

    /**
     * The FxSummary model constructor.
     * @property {module:model/FxSummary}
     */
    FxSummary,

    /**
     * The GetFundingsResponse model constructor.
     * @property {module:model/GetFundingsResponse}
     */
    GetFundingsResponse,

    /**
     * The GetPaymentsForPayoutResponse model constructor.
     * @property {module:model/GetPaymentsForPayoutResponse}
     */
    GetPaymentsForPayoutResponse,

    /**
     * The GetPayoutStatistics model constructor.
     * @property {module:model/GetPayoutStatistics}
     */
    GetPayoutStatistics,

    /**
     * The GetPayoutsResponse model constructor.
     * @property {module:model/GetPayoutsResponse}
     */
    GetPayoutsResponse,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004,

    /**
     * The InvitationStatusResponse model constructor.
     * @property {module:model/InvitationStatusResponse}
     */
    InvitationStatusResponse,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The ListPaymentsResponse model constructor.
     * @property {module:model/ListPaymentsResponse}
     */
    ListPaymentsResponse,

    /**
     * The ListSourceAccountResponse model constructor.
     * @property {module:model/ListSourceAccountResponse}
     */
    ListSourceAccountResponse,

    /**
     * The OnboardedStatus model constructor.
     * @property {module:model/OnboardedStatus}
     */
    OnboardedStatus,

    /**
     * The PagedResponse model constructor.
     * @property {module:model/PagedResponse}
     */
    PagedResponse,

    /**
     * The PagedResponsePage model constructor.
     * @property {module:model/PagedResponsePage}
     */
    PagedResponsePage,

    /**
     * The Payee model constructor.
     * @property {module:model/Payee}
     */
    Payee,

    /**
     * The PayeeInvitationStatus model constructor.
     * @property {module:model/PayeeInvitationStatus}
     */
    PayeeInvitationStatus,

    /**
     * The PayeeInviteRequest model constructor.
     * @property {module:model/PayeeInviteRequest}
     */
    PayeeInviteRequest,

    /**
     * The PayeeResponse model constructor.
     * @property {module:model/PayeeResponse}
     */
    PayeeResponse,

    /**
     * The PayeeType model constructor.
     * @property {module:model/PayeeType}
     */
    PayeeType,

    /**
     * The PaymentAuditCurrency model constructor.
     * @property {module:model/PaymentAuditCurrency}
     */
    PaymentAuditCurrency,

    /**
     * The PaymentChannel model constructor.
     * @property {module:model/PaymentChannel}
     */
    PaymentChannel,

    /**
     * The PaymentChannelCountry model constructor.
     * @property {module:model/PaymentChannelCountry}
     */
    PaymentChannelCountry,

    /**
     * The PaymentChannelRule model constructor.
     * @property {module:model/PaymentChannelRule}
     */
    PaymentChannelRule,

    /**
     * The PaymentChannelRulesResponse model constructor.
     * @property {module:model/PaymentChannelRulesResponse}
     */
    PaymentChannelRulesResponse,

    /**
     * The PaymentEventResponse model constructor.
     * @property {module:model/PaymentEventResponse}
     */
    PaymentEventResponse,

    /**
     * The PaymentInstruction model constructor.
     * @property {module:model/PaymentInstruction}
     */
    PaymentInstruction,

    /**
     * The PaymentResponse model constructor.
     * @property {module:model/PaymentResponse}
     */
    PaymentResponse,

    /**
     * The PaymentsSummary model constructor.
     * @property {module:model/PaymentsSummary}
     */
    PaymentsSummary,

    /**
     * The Payor model constructor.
     * @property {module:model/Payor}
     */
    Payor,

    /**
     * The PayorBalance model constructor.
     * @property {module:model/PayorBalance}
     */
    PayorBalance,

    /**
     * The PayorBrandingResponse model constructor.
     * @property {module:model/PayorBrandingResponse}
     */
    PayorBrandingResponse,

    /**
     * The PayorCreateApiKeyRequest model constructor.
     * @property {module:model/PayorCreateApiKeyRequest}
     */
    PayorCreateApiKeyRequest,

    /**
     * The PayorCreateApiKeyResponse model constructor.
     * @property {module:model/PayorCreateApiKeyResponse}
     */
    PayorCreateApiKeyResponse,

    /**
     * The PayorCreateApplicationRequest model constructor.
     * @property {module:model/PayorCreateApplicationRequest}
     */
    PayorCreateApplicationRequest,

    /**
     * The PayorEmailOptOutRequest model constructor.
     * @property {module:model/PayorEmailOptOutRequest}
     */
    PayorEmailOptOutRequest,

    /**
     * The PayorFundingBankDetailsUpdate model constructor.
     * @property {module:model/PayorFundingBankDetailsUpdate}
     */
    PayorFundingBankDetailsUpdate,

    /**
     * The PayorLogoRequest model constructor.
     * @property {module:model/PayorLogoRequest}
     */
    PayorLogoRequest,

    /**
     * The PayorRef model constructor.
     * @property {module:model/PayorRef}
     */
    PayorRef,

    /**
     * The PayoutStatus model constructor.
     * @property {module:model/PayoutStatus}
     */
    PayoutStatus,

    /**
     * The PayoutSummaryAudit model constructor.
     * @property {module:model/PayoutSummaryAudit}
     */
    PayoutSummaryAudit,

    /**
     * The PayoutSummaryResponse model constructor.
     * @property {module:model/PayoutSummaryResponse}
     */
    PayoutSummaryResponse,

    /**
     * The QueryBatchResponse model constructor.
     * @property {module:model/QueryBatchResponse}
     */
    QueryBatchResponse,

    /**
     * The QuoteFxSummary model constructor.
     * @property {module:model/QuoteFxSummary}
     */
    QuoteFxSummary,

    /**
     * The QuoteResponse model constructor.
     * @property {module:model/QuoteResponse}
     */
    QuoteResponse,

    /**
     * The RejectedPayment model constructor.
     * @property {module:model/RejectedPayment}
     */
    RejectedPayment,

    /**
     * The SourceAccount model constructor.
     * @property {module:model/SourceAccount}
     */
    SourceAccount,

    /**
     * The SourceAccountResponse model constructor.
     * @property {module:model/SourceAccountResponse}
     */
    SourceAccountResponse,

    /**
     * The SourceAccountSummary model constructor.
     * @property {module:model/SourceAccountSummary}
     */
    SourceAccountSummary,

    /**
     * The SupportedCountriesResponse model constructor.
     * @property {module:model/SupportedCountriesResponse}
     */
    SupportedCountriesResponse,

    /**
     * The SupportedCountry model constructor.
     * @property {module:model/SupportedCountry}
     */
    SupportedCountry,

    /**
     * The SupportedCurrency model constructor.
     * @property {module:model/SupportedCurrency}
     */
    SupportedCurrency,

    /**
     * The SupportedCurrencyResponse model constructor.
     * @property {module:model/SupportedCurrencyResponse}
     */
    SupportedCurrencyResponse,

    /**
    * The CountriesApi service constructor.
    * @property {module:api/CountriesApi}
    */
    CountriesApi,

    /**
    * The CurrenciesApi service constructor.
    * @property {module:api/CurrenciesApi}
    */
    CurrenciesApi,

    /**
    * The FundingManagerApi service constructor.
    * @property {module:api/FundingManagerApi}
    */
    FundingManagerApi,

    /**
    * The PayeeBatchCreationApi service constructor.
    * @property {module:api/PayeeBatchCreationApi}
    */
    PayeeBatchCreationApi,

    /**
    * The PayeeInvitationApi service constructor.
    * @property {module:api/PayeeInvitationApi}
    */
    PayeeInvitationApi,

    /**
    * The PayeeServiceApi service constructor.
    * @property {module:api/PayeeServiceApi}
    */
    PayeeServiceApi,

    /**
    * The PayeesApi service constructor.
    * @property {module:api/PayeesApi}
    */
    PayeesApi,

    /**
    * The PaymentAuditServiceApi service constructor.
    * @property {module:api/PaymentAuditServiceApi}
    */
    PaymentAuditServiceApi,

    /**
    * The PayorApplicationsApi service constructor.
    * @property {module:api/PayorApplicationsApi}
    */
    PayorApplicationsApi,

    /**
    * The PayorBrandingApi service constructor.
    * @property {module:api/PayorBrandingApi}
    */
    PayorBrandingApi,

    /**
    * The PayorFundingApi service constructor.
    * @property {module:api/PayorFundingApi}
    */
    PayorFundingApi,

    /**
    * The PayorInformationApi service constructor.
    * @property {module:api/PayorInformationApi}
    */
    PayorInformationApi,

    /**
    * The PayorServiceApi service constructor.
    * @property {module:api/PayorServiceApi}
    */
    PayorServiceApi,

    /**
    * The PayoutHistoryApi service constructor.
    * @property {module:api/PayoutHistoryApi}
    */
    PayoutHistoryApi,

    /**
    * The PayoutServiceApi service constructor.
    * @property {module:api/PayoutServiceApi}
    */
    PayoutServiceApi
};
